stages {
    stage('Security scan with Safety') {
        steps {
            container('ubn22-python-tox') {
                script {
                    // Create virtual environment and install safety
                    sh '''
                        python3.9 -m venv virtualenv
                        source virtualenv/bin/activate
                        pip install safety
                    '''

                    // Run safety check, filter out beta versions using grep or sed
                    def safetyOutput = sh(script: '''
                        ./virtualenv/bin/safety check -r requirements.txt | grep -v 'b[0-9]' > safety_filtered_output.txt
                    ''', returnStatus: true)

                    // Process the filtered output, fail only if non-beta issues are found
                    def filteredOutput = readFile('safety_filtered_output.txt').trim()
                    
                    if (filteredOutput) {
                        error "Pipeline failed due to vulnerabilities with stable or rc fixes available."
                    } else {
                        echo "No blocking vulnerabilities found. Proceeding with pipeline."
                    }
                }
            }
        }
    }
}
